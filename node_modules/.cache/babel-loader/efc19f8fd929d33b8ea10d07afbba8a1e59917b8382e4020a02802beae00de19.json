{"ast":null,"code":"var _jsxFileName = \"/Users/haile/Downloads/PetWebsite/src/Pages/DoctorPage/index.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport TableComponent from \"../../Component/Table\";\nimport Logout from \"../../Component/Logout\";\nimport { ToastContainer, toast, Bounce } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://localhost:4000\";\nconst DovtorPage = () => {\n  _s();\n  const [data, setData] = useState(null);\n  const token = localStorage.getItem(\"accessToken\");\n  toast.success(\"Login successful\", {\n    position: \"top-right\",\n    autoClose: 5000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n    theme: \"light\",\n    transition: Bounce\n  });\n  const addDateInData = (arrayPets, arrayVisits) => {\n    let latestDates = {};\n\n    // Lặp qua mảng lịch sử khám bệnh để tìm ngày gần nhất cho mỗi petId\n    arrayVisits.forEach(record => {\n      if (!latestDates[record.petId] || new Date(record.date) > new Date(latestDates[record.petId])) {\n        latestDates[record.petId] = record.date;\n      }\n    });\n\n    // Thêm khóa mới là \"date\" vào mảng pets\n    arrayPets.forEach(pet => {\n      pet.date = latestDates[pet.id] || null;\n    });\n    return arrayPets;\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const headers = {\n          authorization: `Bearer ${token}`\n        };\n        const responsePets = await axios.get(`${API_URL}/pets`, {\n          headers\n        });\n        const responseUsers = await axios.get(`${API_URL}/users`, {\n          headers\n        });\n        const responseVisits = await axios.get(`${API_URL}/visits`, {\n          headers\n        });\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        const dataReal = responsePets.data.map(pet => {\n          const ownerId = pet.ownerId;\n          return {\n            ...pet,\n            ownerId: responseUsers.data[ownerId - 1].name\n          };\n        });\n        addDateInData(dataReal, responseVisits.data);\n        setData(dataReal);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {\n      autoClose: 5000,\n      position: \"top-right\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Logout, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), data && /*#__PURE__*/_jsxDEV(TableComponent, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n_s(DovtorPage, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n_c = DovtorPage;\nexport default DovtorPage;\nvar _c;\n$RefreshReg$(_c, \"DovtorPage\");","map":{"version":3,"names":["axios","React","useEffect","useState","TableComponent","Logout","ToastContainer","toast","Bounce","jsxDEV","_jsxDEV","API_URL","DovtorPage","_s","data","setData","token","localStorage","getItem","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","transition","addDateInData","arrayPets","arrayVisits","latestDates","forEach","record","petId","Date","date","pet","id","fetchData","headers","authorization","responsePets","get","responseUsers","responseVisits","dataReal","map","ownerId","name","error","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/haile/Downloads/PetWebsite/src/Pages/DoctorPage/index.js"],"sourcesContent":["import axios from \"axios\";\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport TableComponent from \"../../Component/Table\";\nimport Logout from \"../../Component/Logout\";\nimport { ToastContainer, toast, Bounce } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\n\nconst API_URL = \"http://localhost:4000\";\n\nconst DovtorPage = () => {\n    const [data, setData] = useState(null);\n    const token = localStorage.getItem(\"accessToken\");\n    \n    toast.success(\"Login successful\", {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: \"light\",\n        transition: Bounce,\n    });\n\n    const addDateInData = (arrayPets, arrayVisits) => {\n        let latestDates = {};\n\n        // Lặp qua mảng lịch sử khám bệnh để tìm ngày gần nhất cho mỗi petId\n        arrayVisits.forEach((record) => {\n            if (!latestDates[record.petId] || new Date(record.date) > new Date(latestDates[record.petId])) {\n                latestDates[record.petId] = record.date;\n            }\n        });\n\n        // Thêm khóa mới là \"date\" vào mảng pets\n        arrayPets.forEach((pet) => {\n            pet.date = latestDates[pet.id] || null;\n        });\n\n        return arrayPets;\n    };\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const headers = {\n                    authorization: `Bearer ${token}`,\n                };\n\n                const responsePets = await axios.get(`${API_URL}/pets`, { headers });\n\n                const responseUsers = await axios.get(`${API_URL}/users`, { headers });\n\n                const responseVisits = await axios.get(`${API_URL}/visits`, { headers });\n\n                // eslint-disable-next-line react-hooks/exhaustive-deps\n                const dataReal = responsePets.data.map((pet) => {\n                    const ownerId = pet.ownerId;\n                    return { ...pet, ownerId: responseUsers.data[ownerId - 1].name };\n                });\n\n                addDateInData(dataReal, responseVisits.data);\n                setData(dataReal);\n            } catch (error) {\n                console.log(error);\n            }\n        };\n\n        fetchData();\n    }, []);\n\n    return (\n        <div>\n            <ToastContainer autoClose={5000} position=\"top-right\"/>\n            <Logout/>\n            {data && <TableComponent data={data} />}\n        </div>\n    );\n};\n\nexport default DovtorPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}